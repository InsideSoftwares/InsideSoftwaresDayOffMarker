server:
  port: 0

logging:
  exception-conversion-word:
  level:
    liquibase: INFO
    root: INFO

spring:
  data:
    redis:
      repositories:
        enabled: false
      port: 26379
      password: '{cipher}5e954244f702180bb7165fdbf3d89aa7779da7ffa541934a2474dd6844d72065'
      sentinel:
        database: 0
        master: mymaster
        nodes: localhost
        password: '{cipher}5e954244f702180bb7165fdbf3d89aa7779da7ffa541934a2474dd6844d72065'
  datasource:
    url: jdbc:postgresql://localhost:5432/DayOff_Marker
    username: dayoff_marker_ADMIN
    password: pe&X=RwN&@!H7%mB
    hikari:
      connection-timeout: 5000
      idle-timeout: 150000
      max-lifetime: 300000
      minimum-idle: 10
      maximum-pool-size: 50
  jpa:
    show-sql: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        ddl-auto: none
        dialect: org.hibernate.dialect.PostgreSQLDialect
        naming:
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
          physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
  cache:
    enable: true
    type: redis
    redis:
      key-prefix: 'api::'
      time-to-live: 12000000
<<<<<<<< HEAD:etc/resources/InsideDayOffMarker-postgres.yml
  cloud:
    azure:
      active-directory:
        enabled: true
        profile:
          tenant-id: XXXXXXXXXXXXX
        credential:
          client-id: XXXXXXXXXXXXX
          client-secret: XXXXXXXXXXXXX
        app-id-uri: XXXXXXXXXXXXX
        authorization-clients:
          graph:
            scopes:
              - XXXXXXXXXXXXX
        resource-server:
          claim-to-authority-prefix-map:
            roles: "" # no prefix
            scp: "" # no prefix

========
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: DayOffMarker
            authorization-grant-type: password
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:7080/realms/InsideSoftwares
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: http://localhost:7080/realms/InsideSoftwares

jwt:
  auth:
    converter:
      resourceId: "DayOffMarker"
      principalAttribute: "preferred_username"

>>>>>>>> 4f0d44c1ec1b3354be8d2a762038a62e6544ec14:etc/resources/InsideDayOffMarker-postgres-keycloak.yml
insidesoftwares-cache:
  config:
    timeToLiveSeconds: 3600
    caches:
      -  name: DAYOFF_MARKER_CITY
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_COUNTRY
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_FIXEDHOLIDAY
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_HOLIDAY
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_STATE
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_TAG
         timeToLiveSeconds: 3600
      -  name: DAYOFF_MARKER_WORKING
         timeToLiveSeconds: 3600

jdempotent:
  enable: true
  cache:
    redis:
      database: 1
      password: '{cipher}5e954244f702180bb7165fdbf3d89aa7779da7ffa541934a2474dd6844d72065'
      sentinelHostList: localhost
      sentinelPort: "26379"
      sentinelMasterName: "mymaster"
      expirationTimeHour: 2
      dialTimeoutSecond: 3
      readTimeoutSecond: 3
      writeTimeoutSecond: 3
      maxRetryCount: 3
      expireTimeoutHour: 3
  cryptography:
    algorithm: md5
